// Generated by view binder compiler. Do not edit!
package com.example.premiertry.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.premiertry.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySigninBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button SignInContinue;

  @NonNull
  public final EditText SignInEmail;

  @NonNull
  public final TextView SignInEmailError;

  @NonNull
  public final EditText SignInPassword;

  @NonNull
  public final TextView SignInPasswordError;

  @NonNull
  public final TextView textView15;

  private ActivitySigninBinding(@NonNull ConstraintLayout rootView, @NonNull Button SignInContinue,
      @NonNull EditText SignInEmail, @NonNull TextView SignInEmailError,
      @NonNull EditText SignInPassword, @NonNull TextView SignInPasswordError,
      @NonNull TextView textView15) {
    this.rootView = rootView;
    this.SignInContinue = SignInContinue;
    this.SignInEmail = SignInEmail;
    this.SignInEmailError = SignInEmailError;
    this.SignInPassword = SignInPassword;
    this.SignInPasswordError = SignInPasswordError;
    this.textView15 = textView15;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySigninBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySigninBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.SignInContinue;
      Button SignInContinue = ViewBindings.findChildViewById(rootView, id);
      if (SignInContinue == null) {
        break missingId;
      }

      id = R.id.SignInEmail;
      EditText SignInEmail = ViewBindings.findChildViewById(rootView, id);
      if (SignInEmail == null) {
        break missingId;
      }

      id = R.id.SignInEmailError;
      TextView SignInEmailError = ViewBindings.findChildViewById(rootView, id);
      if (SignInEmailError == null) {
        break missingId;
      }

      id = R.id.SignInPassword;
      EditText SignInPassword = ViewBindings.findChildViewById(rootView, id);
      if (SignInPassword == null) {
        break missingId;
      }

      id = R.id.SignInPasswordError;
      TextView SignInPasswordError = ViewBindings.findChildViewById(rootView, id);
      if (SignInPasswordError == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      return new ActivitySigninBinding((ConstraintLayout) rootView, SignInContinue, SignInEmail,
          SignInEmailError, SignInPassword, SignInPasswordError, textView15);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
